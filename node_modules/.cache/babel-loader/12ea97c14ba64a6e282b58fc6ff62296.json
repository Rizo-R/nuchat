{"ast":null,"code":"var _jsxFileName = \"/Users/rizo/Documents/Projects/unichat-course/src/components/Chats.js\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from \"react-router-dom\";\nimport { ChatEngine } from 'react-chat-engine';\nimport { useAuth } from \"../contexts/AuthContext\";\nimport { auth } from \"../firebase\";\nexport default function Chats() {\n  const didMountRef = useRef(false);\n  const [loading, setLoading] = useState(true);\n  const {\n    user\n  } = useAuth();\n  const history = useHistory();\n\n  async function handleLogout() {\n    await auth.signOut();\n    history.push(\"/\");\n  }\n\n  async function getFile(url) {\n    let response = await fetch(url);\n    let data = await response.blob();\n    return new File([data], \"test.jpg\", {\n      type: 'image/jpeg'\n    });\n  }\n\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n\n      if (!user || user === null) {\n        history.push(\"/\");\n        return;\n      } // Get-or-Create should be in a Firebase Function\n\n\n      axios.get('https://api.chatengine.io/users/me/', {\n        headers: {\n          \"project-id\": '784bdb9e-8724-4f63-8ab6-3c10d59f74a7',\n          \"user-name\": user.email,\n          \"user-secret\": user.uid\n        }\n      }).then(() => setLoading(false)).catch(e => {\n        let formdata = new FormData();\n        formdata.append('email', user.email);\n        formdata.append('username', user.email);\n        formdata.append('secret', user.uid);\n        getFile(user.photoURL).then(avatar => {\n          formdata.append('avatar', avatar, avatar.name);\n          axios.post('https://api.chatengine.io/users/', formdata, {\n            headers: {\n              \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY\n            }\n          }).then(() => setLoading(false)).catch(e => console.log('e', e.response));\n        });\n      }); // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    }\n  }, [user, history]);\n  if (!user || loading) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 34\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chats-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"nav-bar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"logo-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Unichat\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: handleLogout,\n    className: \"logout-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(ChatEngine, {\n    height: \"calc(100vh - 66px)\",\n    projectID: \"784bdb9e-8724-4f63-8ab6-3c10d59f74a7\",\n    userName: user.email,\n    userSecret: user.uid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/rizo/Documents/Projects/unichat-course/src/components/Chats.js"],"names":["React","useRef","useState","useEffect","axios","useHistory","ChatEngine","useAuth","auth","Chats","didMountRef","loading","setLoading","user","history","handleLogout","signOut","push","getFile","url","response","fetch","data","blob","File","type","current","get","headers","email","uid","then","catch","e","formdata","FormData","append","photoURL","avatar","name","post","process","env","REACT_APP_CHAT_ENGINE_KEY","console","log"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from \"react\"\n\nimport axios from 'axios'\nimport { useHistory } from \"react-router-dom\"\nimport { ChatEngine } from 'react-chat-engine'\n\nimport { useAuth } from \"../contexts/AuthContext\"\n\nimport { auth } from \"../firebase\"\n\nexport default function Chats() {\n    const didMountRef = useRef(false)\n    const [loading, setLoading] = useState(true)\n    const { user } = useAuth()\n    const history = useHistory()\n\n    async function handleLogout() {\n        await auth.signOut()\n        history.push(\"/\")\n    }\n\n    async function getFile(url) {\n        let response = await fetch(url);\n        let data = await response.blob();\n        return new File([data], \"test.jpg\", { type: 'image/jpeg' });\n    }\n\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true\n\n            if (!user || user === null) {\n                history.push(\"/\")\n                return\n            }\n\n            // Get-or-Create should be in a Firebase Function\n            axios.get(\n                'https://api.chatengine.io/users/me/',\n                {\n                    headers: {\n                        \"project-id\": '784bdb9e-8724-4f63-8ab6-3c10d59f74a7',\n                        \"user-name\": user.email,\n                        \"user-secret\": user.uid\n                    }\n                }\n            )\n\n                .then(() => setLoading(false))\n\n                .catch(e => {\n                    let formdata = new FormData()\n                    formdata.append('email', user.email)\n                    formdata.append('username', user.email)\n                    formdata.append('secret', user.uid)\n\n                    getFile(user.photoURL)\n                        .then(avatar => {\n                            formdata.append('avatar', avatar, avatar.name)\n\n                            axios.post(\n                                'https://api.chatengine.io/users/',\n                                formdata,\n                                { headers: { \"private-key\": process.env.REACT_APP_CHAT_ENGINE_KEY } }\n                            )\n                                .then(() => setLoading(false))\n                                .catch(e => console.log('e', e.response))\n                        })\n                })\n            // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n        }\n    }, [user, history])\n\n\n    if (!user || loading) return <div />\n\n    return (\n        <div className='chats-page'>\n            <div className='nav-bar'>\n                <div className='logo-tab'>\n                    Unichat\n                </div>\n\n                <div onClick={handleLogout} className='logout-tab'>\n                    Logout\n                </div>\n            </div>\n\n            <ChatEngine\n                height='calc(100vh - 66px)'\n                projectID='784bdb9e-8724-4f63-8ab6-3c10d59f74a7'\n                userName={user.email}\n                userSecret={user.uid}\n            />\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}